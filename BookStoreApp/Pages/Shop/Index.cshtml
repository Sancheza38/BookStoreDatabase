@page
@model BookStoreApp.Pages.Shop.IndexModel

@{
    ViewData["Title"] = "Books";
}

<div class="text-center">
    <h1 class="display-4 text-capitalize text-black">Welcome</h1>
    <h2>BookStore Catalog </h2>
</div>
<br />
<br />


<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Search Title, ISBN, or Price:
            <input type="text" name="searchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            Search Publication Date:
            <input type="date" format="dd/mm/yyyy" name="searchDateString" value="@Model.CurrentDateFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<h2>Books</h2>
<table class="table">
    <thead>
        <tr>
            <th>

                @Html.DisplayNameFor(model => model.Books[0].ISBN)

            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Books[0].Title)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Books[0].PublicationDate)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books[0].UserReview)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Books)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ISBN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublicationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserReview)
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.ISBN">Details</a> |
                    <a asp-page="./AddToCart" asp-route-id="@item.ISBN">Add To Cart</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Books.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Books.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Books.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Books.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
